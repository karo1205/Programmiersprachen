Beispiel 1 der Angabe:
======================
0(9)(9~)(4!5#2+#@)@

Beispiel 2 der Angabe: (Achtung: Leerzeichen nach dem "-")
======================
A: (3!3!1- 2!1=()5!C@3#*)
C: (4!5#2+#@)
3 ^A3!4#3!@3#

3 Faktorielle:
--------------
3(3!3!1- 2!1=()5!(4!5#2+#@)@3#*)3!4#3!@3#

Ops:
====
+, -, *, /, %, &, |, =, <, > : eh klar...
n!	- Kopieren:	ersetzt das oberste Element im Stack durch das n-te Element im Stack (von oben)
n#	- Löschen: 	nimmt das oberste Element vom Stack und löscht zusätzlich das n-te Elementim Stack
(x)@	- Anwenden: 	Klammer wird entfernt Ausdruck kommt in Liste an vorderster Stelle, nichts sonst
(..)n ?	- Auslesen: 	ersetzt den geklamerten Ausdruck durch den ASCII-Wert des n-ten Zeichens in der Klammer (linkestes Zeichen in der Klammer hat Index 0
(x)n;	- Erweitern:	erweitert den geklammerten Ausdruck durch das durch den ASCII-Wert n repräsentierte Zeichen --> (xN)
a p$	- Ausgabe:	gibt das Zeichen, welches durch den ASCII-Wert a repräsentiert wird, an die Stelle p im Display aus

Einige Muster:
==============
Vertauschen der obersten 2 Elemente im Stack:
---------------------------------------------
	3!4#: 

[x y z a b] --> [x y z b a]

Holen des n-ten Elementes an die erste Stelle (erste wird zur zweiten)
----------------------------------------------------------------------
	(n+1)!(n+2)#

If (a Vergleich b) then T else F
--------------------------------
a b <(T)(F)(4!5#2+#@)@
Funktioniert prinizipiell mit <, > und =, wobei letzteres auch auf ()-Ausdrücke
Achtung: wenn a und b Zahlen: Leerzeichen!
Beispiele:

0 1 <(T)(F)(4!5#2+#@)@ (Ergibt A)
(abc)(abc)=(T)(F)(4!5#2+#@)@ (Ergibt A)






Testaufgabe 1:
==============
(Text) Zeile (Display)

(abcde)2!0?0$


CHECKs
------
(Error)0?
()0?

Einfache Ausgaben:
==================
"Error": 69 0$114 1$ 114 2$ 111 3$ 114 4$


Ausgabe eines Strings in Klammer:
=================================
Anfangsbedingung: 
Stack: auzugebender String


while ( != -1)
	duplicate string
	ersetze oberstes element (string) durch ASCII-Zeichen an index-Stelle
	Gib oberstes element aus an index-Stelle
	
(String) ?????

1!












